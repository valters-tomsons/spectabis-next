pr: none

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src/SpectabisService
    - src/SpectabisLib
    - Tests/Integration/ServiceTests

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: '$(Configuration)'

steps:
- script: mkdir $(ARTIFACTSFOLDER)

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- script: dotnet publish src/SpectabisService -c $(CONFIGURATION) -r linux-x64 -o $(ServiceArtifact)
  displayName: 'Build Service Package'
  
- script: dotnet publish Tests/Integration/ServiceTests -c $(CONFIGURATION) -r linux-x64 -o $(TestsArtifact)
  displayName: 'Build integration tests'

- task: ArchiveFiles@2
  displayName: 'Archive service package'
  inputs:
    rootFolderOrFile: '$(ServiceArtifact)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-service.zip'
    replaceExistingArchive: true

- task: ArchiveFiles@2
  displayName: 'Archive integration tests'
  inputs:
    rootFolderOrFile: '$(TestsArtifact)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tests.zip'
    replaceExistingArchive: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish service package artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-service.zip'
    artifact: 'Spectabis-Service'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  displayName: 'Publish integration tests artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tests.zip'
    artifact: 'Service-Tests'
    publishLocation: 'pipeline'