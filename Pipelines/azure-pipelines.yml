pr: none

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - src/SpectabisService
    - Tests/Integration/ServiceTests
    - docs
    - Requests
    - Pipelines/azure-pipelines-service.yml
    - Pipelines/azure-pr-ci.yml

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Spectabis-Next
  - name: Version
    value: '$(ClientVersion)'

steps:

- task: Bash@3
  displayName: 'Initialize pipeline'
  inputs:
    targetType: 'inline'
    script: |
      echo "##vso[task.setvariable variable=CommitHash]$(git log --pretty=format:'%h' -n 1)"
      mkdir $ARTIFACTSFOLDER

- task: UseDotNet@2
  displayName: 'Install Dotnet SDK 6'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: PowerShell@2
  displayName: 'Insert service secrets'
  inputs:
    filePath: 'Scripts/InsertSecretsInSource.ps1'
    arguments: 'src/ServiceLib/Helpers/ServiceCredentialsHelper.cs'
  env:
    SERVICE_API_KEY: $(SERVICE_API_KEY)
    TELEMETRY_KEY: $(TELEMETRY_KEY)
    SERVICE_BASE_URL: $(SERVICE_BASE_URL)

- script: dotnet test Tests/Unit
  displayName: 'Run unit tests'

- script: dotnet publish -c $CONFIGURATION -r linux-x64
  displayName: 'Build for linux-x64'

- script: dotnet publish -c $CONFIGURATION -r osx-x64
  displayName: 'Build for osx-x64'

- script: dotnet publish -c $CONFIGURATION -r win-x64
  displayName: 'Build for win-x64'

- task: Bash@3
  displayName: 'Copy resources'
  inputs:
    targetType: 'inline'
    script: |
      cp src/SpectabisNext/Resources src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/linux-x64/publish/ -r
      cp src/SpectabisNext/Resources src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/osx-x64/publish/ -r
      cp src/SpectabisNext/Resources src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/win-x64/publish/ -r

- task: Bash@3
  displayName: 'Package build artifacts for $(Version)'
  inputs:
    targetType: 'inline'
    script: |
      tar -cvzf $ARTIFACTSFOLDER/spectabis-linux-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/linux-x64/publish
      tar -cvzf $ARTIFACTSFOLDER/spectabis-osx-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/osx-x64/publish
      tar -cvzf $ARTIFACTSFOLDER/spectabis-win-$(Build.SourceVersion).tar.gz src/SpectabisNext/bin/$CONFIGURATION/$SDKRELEASEFOLDER/win-x64/publish

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-linux-$(Build.SourceVersion).tar.gz'
    ArtifactName: 'Spectabis-Linux'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-win-$(Build.SourceVersion).tar.gz'
    ArtifactName: 'Spectabis-Windows'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/$(ArtifactsFolder)/spectabis-osx-$(Build.SourceVersion).tar.gz'
    ArtifactName: 'Spectabis-OSX'
    publishLocation: 'Container'
